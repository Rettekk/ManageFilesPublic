
    //layout1 für dateiupload
    public void drop2(DropTargetDropEvent e) {
        String allowedExtensions = ".pdf";
        e.acceptDrop(DnDConstants.ACTION_COPY);

        try {
            Transferable t = e.getTransferable();
            List<java.io.File> files = (List<java.io.File>) t.getTransferData(DataFlavor.javaFileListFlavor);
            for (java.io.File file : files) {
                String fileName = file.getName();
                String fileSize = String.valueOf(file.length() / 1024);
                Drive drive = gdrive.getDriveService();
                if (fileName.toLowerCase().endsWith(allowedExtensions)) {
                    long lastModified = file.lastModified();
                    Date date = new Date(lastModified);
                    SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");
                    String formattedDate = dateFormat.format(date);
                    JDialog confirmDialog = new JDialog(gui, "Datei hochladen?", true);
                    String message = "<html>Möchten Sie die Datei hochladen?<br><br>"
                            + "Weitere Informationen zur Datei:<br><br>"
                            + "Dateiname: " + fileName + "<br>"
                            + "Dateigröße: " + fileSize + " MB<br>"
                            + "Zuletzt bearbeitet am: " + formattedDate + "<br>"
                            + "Dateipfad: " + file.getAbsolutePath() + "<br>"
                            + "<br><br>"
                            + "Die Datei wird umbenannt und in den jeweiligen Ordner gelegt.</html>";

                    JLabel messageLabel = new JLabel(message);
                    JButton yesButton = new JButton("Ja");
                    JButton noButton = new JButton("Nein");
                    yesButton.addActionListener(ev -> {
                        try {
                            PDDocument document = PDDocument.load(file);
                            for (int i = 0; i < document.getNumberOfPages(); i++) {
                                PDFTextStripper pdfStripper = new PDFTextStripper();
                                String result = pdfStripper.getText(document);
                                String[] jobs = infos.jobArray;
                                for (String jobInfo : jobs) {
                                    if (result.toLowerCase().contains(functions.normalizeString(jobInfo))) {
                                        foundJobTitle = jobInfo;
                                        foundJob = true;
                                        break;
                                    }
                                }
                                if (!foundJob) {
                                    errorHandling.jobNotFound(file);
                                    confirmDialog.dispose();
                                    return;
                                }
                                String[] exams = infos.examArray;
                                for (String examInfo : exams) {
                                    if (result.toLowerCase().contains(functions.normalizeString(examInfo))) {
                                        foundExamTitle = examInfo;
                                        foundExam = true;
                                        break;
                                    }
                                }
                                if (foundExam) {
                                    if (foundExamTitle.equals("WISO") || foundExamTitle.equals("Wirtschaftskunde")) {
                                        foundExamTitle = "WISO";
                                    } else if (foundExamTitle.equals("AP1") || foundExamTitle.equals("AP 1") || foundExamTitle.equals("Abschlussprüfung Teil 1") || foundExamTitle.equals("Abschlussprüfung Teil1")) {
                                        foundExamTitle = "AP1";
                                    } else if (foundExamTitle.equals("AP2") || foundExamTitle.equals("AP 2") || foundExamTitle.equals("Abschlusspüfung Teil 2") || foundExamTitle.equals("Abschlussprüfung Teil2")) {
                                        foundExamTitle = "AP2";
                                    }
                                } else {
                                    errorHandling.examNotFound(file);
                                    return;
                                }
                                String[] semesters = infos.semArray;
                                for (String semesterInfo : semesters) {
                                    if (result.toLowerCase().contains(functions.normalizeString(semesterInfo))) {
                                        foundSemesterTitle = semesterInfo;
                                        foundSemester = true;
                                        break;
                                    }
                                }
                                if (foundSemester) {
                                    if (foundSemesterTitle.equals("Sommer23") || foundSemesterTitle.equals("Sommer 23")) {
                                        foundSemesterTitle = "Sommer 23";
                                    } else if (foundSemesterTitle.equals("Winter2324") || foundSemesterTitle.equals("Winter 23/24") || foundSemesterTitle.equals("Winter23/24") || foundSemesterTitle.equals("Winter 2324")
                                            || foundSemesterTitle.equals("Winter 23-24") || foundSemesterTitle.equals("Winter 23 24") || foundSemesterTitle.equals("Winter 23-24")) {
                                        foundSemesterTitle = "Winter 23/24";
                                    }
                                } else {
                                    errorHandling.semesterNotFound(file);
                                    return;
                                }
                                document.close();
                                if (foundJob && foundExam && foundSemester) {
                                    String jobFolderId = gdrive.getOrCreateFolderId(drive, foundJobTitle, "root");
                                    String examFolderId = gdrive.getOrCreateFolderId(drive, foundExamTitle, jobFolderId);
                                    String semesterFolderId = gdrive.getOrCreateFolderId(drive, foundSemesterTitle, examFolderId);
                                    //rename file
                                    String timestamp = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss").format(new Date());
                                    String newFileName = foundJobTitle + "_" + foundExamTitle + "_" + foundSemesterTitle + "_" + fileName.substring(0, fileName.lastIndexOf(".")) + "_" + timestamp;
                                    //Upload
                                    File fileMetadata = new File();
                                    fileMetadata.setName(newFileName);
                                    fileMetadata.setParents(Collections.singletonList(semesterFolderId));
                                    File newFile = drive.files().create(fileMetadata).execute();
                                    String fileId = newFile.getId();
                                    java.io.File fileContent = new java.io.File(file.getAbsolutePath());
                                    ByteArrayContent content = new ByteArrayContent("application/octet-stream", Files.readAllBytes(fileContent.toPath()));
                                    Drive.Files.Update update = drive.files().update(fileId, null, content);
                                    update.execute();
                                    confirmDialog.dispose();
                                } else {
                                    errorHandling.lessInfos(file);
                                    return;
                                }
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    });

                    noButton.addActionListener(ev -> {
                        confirmDialog.dispose();
                    });

                    //UploadPanel
                    JPanel buttonPanel = new JPanel();
                    buttonPanel.add(yesButton);
                    buttonPanel.add(noButton);
                    confirmDialog.getContentPane().setLayout(new BorderLayout());
                    confirmDialog.getContentPane().add(messageLabel, BorderLayout.CENTER);
                    confirmDialog.getContentPane().add(buttonPanel, BorderLayout.SOUTH);
                    confirmDialog.pack();
                    confirmDialog.setLocationRelativeTo(gui);
                    confirmDialog.setVisible(true);

                } else {
                    errorHandling.notSupportFileType();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        e.dropComplete(true);
    }